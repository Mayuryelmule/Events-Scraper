from flask import Flask, jsonify, request
import subprocess
import json

from scraper import scrape

app = Flask(__name__)

FILE_PATH = 'registrations.json'

# Initialize the file if it doesn't exist
try:
    with open(FILE_PATH, 'r') as file:
        data = json.load(file)
except (FileNotFoundError, json.JSONDecodeError):
    with open(FILE_PATH, 'w') as file:
        json.dump([], file)


@app.route('/register', methods=['GET'])
def register_event():
    try:
        print("I got something")
        email = request.args.get('email')
        event_link = request.args.get('event_link')

        # Simple validation
        if not email or not event_link:
            return jsonify({"error": "Invalid data"}), 400
        
        # Append the new entry
        with open(FILE_PATH, 'r+') as file:
            current_data = json.load(file)
            current_data.append({"email": email, "event_link": event_link})
            file.seek(0)
            json.dump(current_data, file, indent=4)

        return jsonify({"message": "Registration successful!"}), 200
    except Exception as e:
        print(e)
        return jsonify({"error": "Internal server error"}), 500


# Endpoint to scrape and fetch events
@app.route('/', methods=['GET'])
def get_events():
    # Run the scraper script
    scrape()
    
    # Load the JSON file generated by the scraper
    with open('events.json', 'r') as file:
        events = json.load(file)
    
    return jsonify(events)

if __name__ == '__main__':
    app.run(port=5000, debug=True)
